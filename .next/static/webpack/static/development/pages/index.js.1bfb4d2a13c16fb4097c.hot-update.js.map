{"version":3,"file":"static/webpack/static/development/pages/index.js.1bfb4d2a13c16fb4097c.hot-update.js","sources":["webpack:///./components/common/MobileNav/index.tsx"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { nav, canUseDOM } from '../utils';\nimport './mobileNav.less';\n\nexport interface IProps {\n  item?: any;\n  parent?: any;\n}\n\nconst renderNav = items => items && items.map((item) => {\n  return item.children\n    ? <NavItem key={item.name} item={item} parent /> : <NavItem key={item.name} item={item} />;\n});\n\nconst NavItem: React.SFC<IProps> = ({ item = {}, parent = false }) => {\n  const renderedChildren = renderNav(item.children);\n  return (\n    <li className=\"MobileNavParentli\">\n      <Link href={item.route}>\n        <a className=\"MobileNavParentliLink\">{ item.name }</a>\n      </Link>\n      {\n        parent && (\n          <ul className=\"MobileNavInner\">\n            { renderedChildren }\n          </ul>)\n      }\n    </li>\n  );\n};\n\nexport interface IMobileNavProps {\n  onToggleMobileNav: () => void;\n  show: boolean;\n}\n\nclass MobileNav extends React.Component<IMobileNavProps> {\n  // componentWillMount() {\n  //   canUseDOM && document.body.classList.add('locked');\n  // }\n\n  // componentWillUnmount() {\n  //   canUseDOM && document.body.classList.remove('locked');\n  // }\n\n  \n  render() {\n    const { onToggleMobileNav } = this.props;\n    const dynamicStyle = {\n      top: this.props.show ? '0' : '-100vh',\n    };\n    return (\n      <div\n        className=\"mobileNav--container\"\n        style={dynamicStyle}\n        onScroll={() => undefined}\n        >\n        <div\n          className=\"close\"\n          onClick={onToggleMobileNav}\n          onKeyDown={onToggleMobileNav}\n          role=\"button\"\n          tabIndex={0}\n          >\n          <img src=\"/static/images/icons/close.svg\" alt=\"Закрыть меню\" />\n        </div>\n        <div className=\"MobileNav\">\n          <ul className=\"MobileNavUl\">\n            {renderNav(nav)}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default MobileNav;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAMA;AACA;AAMA;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAMA;;;;AArCA;AACA;AAqCA;AAEA;;;;A","sourceRoot":""}